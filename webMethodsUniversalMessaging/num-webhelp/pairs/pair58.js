// 
// Search index entries generated by WebWorks ePublisher
//
// Copyright (c) 2013-2022 Software AG, Darmstadt, Germany and/or Software AG USA, Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors
//
var pairs =
{
"umtransport":{"api":1,"model":1}
,"api":{"universal":1,"extremely":1,"known":1,"broker-based":1,"currently":1,"java":1,"simple":1,"similar":1,"api":1,"provides":1,"following":1,"support":1,"let\u0027s":1,"xample":1,"here\u0027s":1}
,"universal":{"messaging":1}
,"messaging":{"offers":1,"architecture":1,"functionality":1,"communication":1}
,"offers":{"addition":1,"additional":1}
,"addition":{"standard":1}
,"standard":{"full":1,"tcp":1}
,"full":{"-featured":1}
,"-featured":{"client-server":1}
,"client-server":{"api":1}
,"extremely":{"lightweight":1}
,"lightweight":{"client":1}
,"client":{"-client":1,"publisher":1,"accept":1,"server":1,"transport":1,"=new":1,"public":1,"connection":1,"connects":1,"private":1,"transports":1,"\u002F\u002Faccept":1,"makes":1,"connected":1,"(std":1,"(argv":1,"<<std":1,"(synctrshared)":1}
,"-client":{"communication":1}
,"communication":{"api":1,"transport":1,"technologies":1,"betw":1,"transpo":1}
,"known":{"umtransport":1}
,"broker-based":{"model":1}
,"model":{"historically":1,"common":1,"umtransport":1,"peer":1,"allows":1,"bypasses":1}
,"historically":{"messaging":1}
,"architecture":{"predominantly":1}
,"predominantly":{"based":1}
,"based":{"\u0027broker":1,"arch":1,"protocol":1}
,"\u0027broker":{"middle":1}
,"middle":{"approach":1}
,"approach":{"often":1}
,"often":{"ferred":1}
,"ferred":{"\u0027hub":1}
,"\u0027hub":{"spoke":1}
,"spoke":{"broker":1}
,"broker":{"acts":1,"based":1,"distributes":1,"effect":1,"messaging":1}
,"acts":{"communi":1,"server":1}
,"communi":{"cations":1}
,"cations":{"hub":1}
,"hub":{"routing":1}
,"routing":{"messages":1}
,"messages":{"logically":1,"broker":1,"interested":1,"synchronousclient":1,"echoserver":1,"exactly":1,"std":1}
,"logically":{"decoupled":1}
,"decoupled":{"ers":1}
,"ers":{"pub-sub":1,"aware":1}
,"pub-sub":{"model":1}
,"common":{"paradigm":1}
,"paradigm":{"broker":1}
,"arch":{"itecture":1}
,"itecture":{"publishers":1}
,"publishers":{"send":1,"model":1}
,"send":{"messages":1}
,"distributes":{"messages":1}
,"interested":{"nsumers":1}
,"nsumers":{"umtransport":1}
,"peer":{"peer":1,"model":1,"acts":1}
,"allows":{"ers":1}
,"aware":{"communicate":1}
,"communicate":{"directly":1,"irectly":1}
,"directly":{"anot":1,"tcp":1}
,"anot":{"rather":1}
,"rather":{"broker":1}
,"effect":{"publisher":1}
,"publisher":{"peer":1,"latency":1}
,"server":{"consumer":1,"echoclient":1,"connect":1,"transport":1,"synchronoustransport":1,"std":1}
,"consumer":{"communicate":1,"halving":1}
,"irectly":{"publishers":1}
,"bypasses":{"broker":1}
,"functionality":{"suc":1,"available":1}
,"suc":{"persistence":1}
,"persistence":{"transactional":1}
,"transactional":{"semantics":1}
,"semantics":{"results":1}
,"results":{"considerably":1}
,"considerably":{"lower":1}
,"lower":{"latency":1}
,"latency":{"delivery":1,"effectively":1,"message":1}
,"delivery":{"information":1,"paramount":1}
,"information":{"ublisher":1}
,"ublisher":{"consumer":1}
,"halving":{"number":1}
,"number":{"hops":1}
,"hops":{"etween":1}
,"etween":{"client":1}
,"effectively":{"halv":1}
,"halv":{"especially":1}
,"especially":{"useful":1}
,"useful":{"ultra-low":1}
,"ultra-low":{"latency":1}
,"message":{"delivery":1,"type":1,"*\u002Fpublic":1,"m_client.read":1,"content":1}
,"paramount":{"(in":1}
,"(in":{"example":1}
,"example":{"links":1}
,"links":{"ricing":1}
,"ricing":{"quant":1}
,"quant":{"risk":1}
,"risk":{"engines":1}
,"engines":{"trading":1}
,"trading":{"platforms)":1}
,"platforms)":{"umtransport":1}
,"currently":{"available":1}
,"available":{"java":1}
,"java":{"java":1,"located":1,"api":1,"client":1,"echoclient":1}
,"located":{"com.softwareag.um.modules.transport":1,"com":1}
,"com.softwareag.um.modules.transport":{"package":1}
,"package":{"located":1,"com.softwareag.um.modules.examples.transport.echo":1}
,"com":{":softwareag":1}
,":softwareag":{":umtransport":1}
,":umtransport":{"java":1,":samples":1,"com":1}
,"simple":{"allowing":1}
,"allowing":{"client":1}
,"accept":{"connections":1,"transport":1,"new":1,"()))":1}
,"connections":{"clients":1}
,"clients":{"receive":1,"synchronously":1,"api":1}
,"receive":{"arbitrary":1}
,"arbitrary":{"bin":1}
,"bin":{"ary":1}
,"ary":{"data":1}
,"data":{"clients":1,"transmitted":1,"ssl":1}
,"synchronously":{"asynchronously":1}
,"asynchronously":{"ways":1}
,"ways":{"api":1}
,"similar":{"standard":1}
,"tcp":{"socket":1,"sockets":1}
,"socket":{"offers":1}
,"additional":{"benefit":1}
,"benefit":{"able":1}
,"able":{"just":1}
,"just":{"tcp":1,"basic":1}
,"sockets":{"communication":1,"data":1,"ssl":1,"shm":1}
,"transport":{"following":1,"synchronoustransport":1,"=transportfactory.connect":1,"\u002F\u002Fso":1,"\u002F\u002Fbecause":1,"private":1,"\u002F\u002Fto":1,"=transportfactory.bind":1,"e.g":1,"auto":1,"=transportfactory":1,"read":1}
,"following":{"universal":1,"restrictions":1}
,"technologies":{"tcp":1}
,"transmitted":{"directly":1,"tcp":1,"via":1}
,"ssl":{"data":1,"encrypted":1}
,"encrypted":{"transmitted":1}
,"shm":{"data":1}
,"via":{"shared":1,"remote":1}
,"shared":{"memory":1}
,"memory":{"(for":1,"access":1}
,"(for":{"near-instant":1}
,"near-instant":{"access":1}
,"access":{"processes":1,"access":1}
,"processes":{"machine)":1,"remote":1}
,"machine)":{"rdma":1}
,"rdma":{"data":1,"communication":1}
,"remote":{"direct":1,"machine":1}
,"direct":{"memory":1}
,"machine":{"requires":1}
,"requires":{"network":1}
,"network":{"adapters":1}
,"adapters":{"support":1}
,"support":{"rdma)":1,"asynchronous":1,"rdma":1}
,"rdma)":{"api":1}
,"provides":{"subset":1}
,"subset":{"functionality":1}
,"restrictions":{"api":1}
,"asynchronous":{"communication":1}
,"betw":{"een":1}
,"een":{"clients":1}
,"transpo":{"using":1}
,"using":{"java":1,"api":1,"namespace":1}
,"let\u0027s":{"quick":1}
,"quick":{"look":1}
,"look":{"api":1}
,"xample":{"echo":1}
,"echo":{"java":1,"service":1,"servcie":1}
,"echoclient":{"ite":1,"here\u0027s":1,"package":1,"{public":1,"(string":1,"(args":1,"<url>":1,"include":1,"void":1,"<url>\u005Cn":1,"client":1}
,"ite":{"string":1}
,"string":{"echoserver":1,"entered":1,"clienttransportcontext":1,"line":1,"auto":1}
,"echoserver":{"echoserver":1,"respond":1,"*the":1,"until":1,"package":1,"immediately":1,"implements":1,"(string":1,"=new":1,"(args":1,"<url>":1,"include":1,"int":1,"(argv":1}
,"respond":{"echoclient":1,"response":1,"messages":1}
,"here\u0027s":{"java":1,"echoclient":1,"echoserver":1}
,"com.softwareag.um.modules.examples.transport.echo":{"import":1}
,"import":{"com.softwareag.um.modules.transport.clientcontextbuilderfactory":1,"com.softwareag.um.modules.transport.clienttransportcontext":1,"com.softwareag.um.modules.transport.synchronoustransport":1,"com.softwareag.um.modules.transport.transportfactory":1,"com.softwareag.um.modules.examples.transport.simplemessage":1,"com.softwareag.um.modules.examples.transport.synchronousclient":1,"java.io.bufferedreader":1,"java.io.ioexception":1,"java.io.inputstreamreader":1,"com.softwareag.um.modules.transport.servercontextbuilderfactory":1,"com.softwareag.um.modules.transport.servertransportcontext":1,"com.softwareag.um.modules.transport.synchronousservertransport":1}
,"com.softwareag.um.modules.transport.clientcontextbuilderfactory":{"import":1}
,"com.softwareag.um.modules.transport.clienttransportcontext":{"import":1}
,"com.softwareag.um.modules.transport.synchronoustransport":{"import":1}
,"com.softwareag.um.modules.transport.transportfactory":{"import":1}
,"com.softwareag.um.modules.examples.transport.simplemessage":{"import":1}
,"com.softwareag.um.modules.examples.transport.synchronousclient":{"import":1}
,"java.io.bufferedreader":{"import":1}
,"java.io.ioexception":{"import":1,"\u002F***this":1}
,"java.io.inputstreamreader":{"\u002F***this":1}
,"\u002F***this":{"sample":1}
,"sample":{"app":1,"handle":1}
,"app":{"simply":1}
,"simply":{"writes":1,"wrapper":1}
,"writes":{"string":1}
,"entered":{"console":1}
,"console":{"echoserver":1,"*\u002Fpublic":1}
,"*the":{"echoserver":1}
,"response":{"output":1}
,"output":{"console":1}
,"*\u002Fpublic":{"class":1}
,"class":{"echoclient":1,"readthread":1,"echoserver":1}
,"{public":{"echoclient":1}
,"(string":{"url)":1,"args)":1}
,"url)":{"throws":1,"{m_url":1,"stopped":1}
,"throws":{"ioexception":1}
,"ioexception":{"{\u002F\u002Fuse":1,"{if":1,"{\u002F\u002Fthe":1}
,"{\u002F\u002Fuse":{"factory":1}
,"factory":{"generate":1,"create":1}
,"generate":{"required":1}
,"required":{"builder":1}
,"builder":{"based":1}
,"protocol":{"\u002F\u002Fin":1,"url":1}
,"\u002F\u002Fin":{"url":1}
,"url":{"string":1,"servertransportcontext":1,"\u002F\u002Fbecause":1}
,"clienttransportcontext":{"context":1}
,"context":{"=clientcontextbuilderfactory.getbuilder":1,"based":1,"=servercontextbuilderfactory.getbuilder":1,"=clienttransportcontextfactory":1}
,"=clientcontextbuilderfactory.getbuilder":{"(url)":1}
,"(url)":{".build":1}
,".build":{"\u002F\u002Fwe":1,"\u002F\u002Fbecause":1}
,"\u002F\u002Fwe":{"pass":1}
,"pass":{"handlers":1}
,"handlers":{"connect":1}
,"connect":{"method":1,"e.g":1}
,"method":{"\u002F\u002Fbecause":1,"returned":1}
,"\u002F\u002Fbecause":{"want":1,"read":1,"passed":1}
,"want":{"synchronous":1}
,"synchronous":{"transport":1}
,"synchronoustransport":{"transport":1,"clienttransport":1}
,"=transportfactory.connect":{"(context)":1}
,"(context)":{"\u002F\u002Fthis":1,"public":1}
,"\u002F\u002Fthis":{"just":1}
,"basic":{"wrapper":1}
,"wrapper":{"client":1,"reading\u002Fwriting":1}
,"\u002F\u002Fso":{"easier":1}
,"easier":{"read\u002Fwrite":1,"client":1}
,"read\u002Fwrite":{"messages":1}
,"synchronousclient":{"<simplemessage>":1}
,"<simplemessage>":{"client":1,"(transport)":1,"_client)":1,"(clienttransport)":1,"&client)":1}
,"=new":{"synchronousclient":1,"bufferedreader":1,"echoserver":1,"thread":1}
,"(transport)":{"bufferedreader":1}
,"bufferedreader":{"=new":1,"(new":1}
,"(new":{"inputstreamreader":1,"simplemessage":1}
,"inputstreamreader":{"(system.in))":1}
,"(system.in))":{"\u002F\u002Fstart":1}
,"\u002F\u002Fstart":{"new":1}
,"new":{"thread":1,"readthread":1,"echoclient":1,"client":1}
,"thread":{"read":1,"{synchronousclient":1,"=new":1,"(echoserver)":1}
,"read":{"client":1,"blocking":1,"\u002F\u002Fblocking":1}
,"blocking":{"call":1}
,"call":{"new":1,"accept":1,"readthread":1}
,"readthread":{"(client)":1,"extends":1,"(synchronousclient":1,"readthread":1,"void":1}
,"(client)":{"\u002F\u002Fnow":1,"poco":1,"com":1}
,"\u002F\u002Fnow":{"continue":1}
,"continue":{"write":1}
,"write":{"messages":1}
,"until":{"user":1,"client":1}
,"user":{"enter":1}
,"enter":{"\u0027quit":1,"message":1,"quit":1}
,"\u0027quit":{"(true)":1,"exit":1,"(canrun)":1}
,"(true)":{"{system.out.println":1,"{simplemessage":1}
,"{system.out.println":{"enter":1,"echoclient":1,"echoserver":1,"waiting":1,"connection":1}
,"type":{"\u0027quit":1}
,"exit":{"string":1,"<<std":1,"(1)":1}
,"line":{"=br.readline":1}
,"=br.readline":{"(line.equalsignorecase":1}
,"(line.equalsignorecase":{"quit":1}
,"quit":{"\u0022))":1,"system.in.read":1,"{canrun":1}
,"\u0022))":{"{break":1}
,"{break":{"else":1}
,"else":{"{client.write":1,"{simplemessage":1}
,"{client.write":{"(new":1,"(client.read":1}
,"simplemessage":{"(line))":1,"())":1,"()))":1}
,"(line))":{"private":1}
,"private":{"static":1,"final":1,"volatile":1}
,"static":{"class":1,"void":1}
,"extends":{"thread":1}
,"{synchronousclient":{"<simplemessage>":1}
,"public":{"readthread":1,"void":1,"static":1,"echoserver":1}
,"(synchronousclient":{"<simplemessage>":1}
,"_client)":{"{client":1}
,"{client":{"=_client":1}
,"=_client":{"start":1}
,"start":{"@override":1}
,"@override":{"public":1}
,"void":{"run":1,"main":1,"usage":1,"close":1,"com":1}
,"run":{"{try":1}
,"{try":{"{while":1,"{\u002F\u002Fuse":1}
,"{while":{"(true)":1,"stopped)":1,"(canrun)":1}
,"{simplemessage":{"mess":1,"(input)":1,"message":1,"msg":1}
,"mess":{"=client.read":1}
,"=client.read":{"(new":1}
,"())":{"system.out.println":1,"catch":1}
,"system.out.println":{"(mess.tostring":1,"<required":1,"(\u0022\u005Cturl":1,"press":1,"client":1}
,"(mess.tostring":{"())":1}
,"catch":{"(exception":1,"(ioexception":1,"(poco":1}
,"(exception":{"{e.printstacktrace":1}
,"{e.printstacktrace":{"public":1,"using":1}
,"main":{"(string":1}
,"args)":{"throws":1}
,"{if":{"(args.length":1,"(argc":1}
,"(args.length":{"==0)":1}
,"==0)":{"{usage":1}
,"{usage":{"system.exit":1}
,"system.exit":{"(1)":1}
,"(1)":{"new":1,"echoserver":1}
,"(args":{"[0])":1}
,"[0])":{"public":1,"thread":1}
,"usage":{"{system.out.println":1}
,"<url>":{"system.out.println":1,"<<std":1}
,"<required":{"parameters>":1,"parameters>\u005Cn\u005Cturl":1}
,"parameters>":{"system.out.println":1}
,"(\u0022\u005Cturl":{"-protocol:\u002F\u002Fhost:port":1}
,"-protocol:\u002F\u002Fhost:port":{"server":1,"bind":1}
,"e.g":{"transportfactory.socket":1,"tcp:\u002F\u002Flocalhost:9000":1}
,"transportfactory.socket":{":\u002F\u002Flocalhost:9000":1}
,":\u002F\u002Flocalhost:9000":{"echoserver":1,"protected":1}
,"com.softwareag.um.modules.transport.servercontextbuilderfactory":{"import":1}
,"com.softwareag.um.modules.transport.servertransportcontext":{"import":1}
,"com.softwareag.um.modules.transport.synchronousservertransport":{"import":1}
,"handle":{"client":1}
,"connection":{"time":1,"server":1,"closed":1}
,"time":{"client":1}
,"connects":{"*the":1}
,"immediately":{"respond":1}
,"exactly":{"message":1}
,"implements":{"runnable":1}
,"runnable":{"{private":1}
,"{private":{"volatile":1}
,"volatile":{"synchronousclient":1,"boolean":1}
,"final":{"synchronousservertransport":1}
,"synchronousservertransport":{"transport":1,"means":1}
,"boolean":{"stopped":1}
,"stopped":{"=false":1,"(false)":1}
,"=false":{"public":1,"else":1,"void":1}
,"{\u002F\u002Fthe":{"factory":1}
,"create":{"correct":1}
,"correct":{"context":1}
,"servertransportcontext":{"context":1}
,"=servercontextbuilderfactory.getbuilder":{"(url)":1}
,"passed":{"accepthandler":1}
,"accepthandler":{"bind":1}
,"bind":{"method":1,"server":1}
,"returned":{"\u002F\u002Fa":1}
,"\u002F\u002Fa":{"synchronousservertransport":1}
,"means":{"call":1}
,"\u002F\u002Fto":{"accept":1}
,"transports":{"transport":1,"m_transport":1}
,"=transportfactory.bind":{"(context)":1}
,"(echoserver)":{"t.start":1,"std":1}
,"t.start":{"system.out.println":1}
,"press":{"enter":1,"key":1}
,"system.in.read":{"echoserver.close":1}
,"echoserver.close":{"public":1,"th.tryjoin":1}
,"protected":{"void":1}
,"close":{"{stopped":1,"void":1}
,"{stopped":{"=true":1}
,"=true":{"client.close":1,"\u002F\u002Fnow":1,"m_transport->":1}
,"client.close":{"transport.close":1,"th.tryjoin":1}
,"transport.close":{"public":1}
,"waiting":{"client":1}
,"\u002F\u002Faccept":{"block":1}
,"block":{"until":1}
,"makes":{"connection":1}
,"clienttransport":{"=transport.accept":1}
,"=transport.accept":{"system.out.println":1}
,"connected":{"echo":1}
,"service":{"started":1}
,"started":{"\u002F\u002Fthe":1,"try":1}
,"\u002F\u002Fthe":{"syncronousclient":1}
,"syncronousclient":{"simply":1}
,"reading\u002Fwriting":{"easier":1}
,"(clienttransport)":{"try":1}
,"try":{"{while":1}
,"stopped)":{"{client.write":1,"{std":1,"{simplemessage":1}
,"(client.read":{"(new":1}
,"()))":{"catch":1,"synchronousclient":1}
,"(ioexception":{"{system.out.println":1,"{e.printstacktrace":1}
,"closed":{"catch":1,"<<e.displaytext":1,"<<std":1}
,"include":{"echoclient.h":1,"clienttransportcontextfactory.h":1,"transportfactory.h":1,"<utility>":1,"<iostream>":1,"echoserver.h":1,"servertransportcontextfactory.h":1,"synchronousclient.h":1,"simplemessage.h":1}
,"echoclient.h":{"include":1}
,"clienttransportcontextfactory.h":{"include":1}
,"transportfactory.h":{"include":1}
,"<utility>":{"include":1}
,"<iostream>":{"com":1}
,":samples":{":echo":1}
,":echo":{":echoclient":1,":echoserver":1}
,":echoclient":{":echoclient":1,"(std":1,"echoclient":1,":run":1,":main":1,":readthread":1}
,"(std":{":string":1,":move":1,":cin":1}
,":string":{"url)":1,"input":1}
,"{m_url":{"=url":1}
,"=url":{"com":1}
,":run":{"{try":1}
,"auto":{"context":1,"transport":1}
,"=clienttransportcontextfactory":{":build":1}
,":build":{"(m_url)":1,"(url))":1}
,"(m_url)":{"\u002F\u002Fwe":1}
,"=transportfactory":{":connect":1,":bind":1}
,":connect":{"(std":1}
,":move":{"(context))":1,"(transport))":1,"(transportshared))":1,"(m_transport->":1}
,"(context))":{"\u002F\u002Fthis":1}
,"std":{":shared_ptr":1,":string":1,":getline":1,":cout":1,":cin.ignore":1}
,":shared_ptr":{"<synchronoustransport>":1}
,"<synchronoustransport>":{"transportshared":1,"synctrshared":1}
,"transportshared":{"(std":1}
,"(transport))":{"synchronousclient":1}
,"(transportshared))":{"\u002F\u002Fstart":1}
,"\u002F\u002Fblocking":{"call":1}
,"poco":{":thread":1}
,":thread":{"th.start":1}
,"th.start":{"(readthread)":1,"(echoserver)":1}
,"(readthread)":{"bool":1}
,"bool":{"canrun":1}
,"canrun":{"=true":1}
,"(canrun)":{"{std":1,"{simplemessage":1}
,"{std":{":cout":1}
,":cout":{"<<\u0022":1,"<<ex.displaytext":1}
,"<<\u0022":{"enter":1,"echoclient":1,"protocol:\u002F\u002Fhost:port":1,"message":1,"connection":1,"echoserver":1,"press":1,"waiting":1}
,"<<std":{":endl":1}
,":endl":{"std":1,"echoclient":1,"catch":1,"<<\u0022":1,"<<\u0022\u005Cturl":1,"exit":1,"\u002F\u002Faccept":1}
,"input":{"std":1}
,":getline":{"(std":1}
,":cin":{"input)":1}
,"input)":{"(input":1}
,"(input":{"==\u0022":1}
,"==\u0022":{"quit":1}
,"{canrun":{"=false":1}
,"(input)":{"client.write":1}
,"client.write":{"(sm)":1,"(msg)":1}
,"(sm)":{"readthread.shutdown":1}
,"readthread.shutdown":{"client.close":1}
,"th.tryjoin":{"(10000)":1}
,"(10000)":{"catch":1,"return":1}
,"(poco":{":exception":1,":exception&e)":1}
,":exception":{"&ex)":1}
,"&ex)":{"{std":1}
,"<<ex.displaytext":{"int":1,"<<std":1}
,"int":{"com":1}
,":main":{"(int":1}
,"(int":{"argc":1}
,"argc":{"char**argv)":1}
,"char**argv)":{"{if":1}
,"(argc":{"<2)":1}
,"<2)":{"{std":1}
,"<url>\u005Cn":{"<required":1}
,"parameters>\u005Cn\u005Cturl":{"<<\u0022":1}
,"protocol:\u002F\u002Fhost:port":{"server":1}
,"tcp:\u002F\u002Flocalhost:9000":{"<<std":1}
,"(argv":{"[1])":1}
,"[1])":{"client.run":1,"poco":1}
,"client.run":{"return":1}
,"return":{"com":1,"void":1}
,":readthread":{":readthread":1,"(synchronousclient":1,"readthread":1,":shutdown":1,":run":1}
,"&client)":{"m_client":1}
,"m_client":{"(client)":1}
,":shutdown":{"{canrun":1}
,"m_client.read":{"(message)":1}
,"(message)":{"std":1}
,"content":{"<<message":1}
,"<<message":{"<<std":1}
,":exception&e)":{"{std":1}
,"<<e.displaytext":{"here\u0027s":1}
,"echoserver.h":{"include":1}
,"servertransportcontextfactory.h":{"include":1}
,"synchronousclient.h":{"include":1}
,"simplemessage.h":{"using":1}
,"namespace":{"com":1}
,":echoserver":{":echoserver":1,"(std":1,"echoserver":1,":main":1,":close":1,":run":1}
,"(false)":{"{\u002F\u002Fthe":1}
,"m_transport":{"=transportfactory":1}
,":bind":{"(servertransportcontextfactory":1}
,"(servertransportcontextfactory":{":build":1}
,"(url))":{"com":1}
,"<<\u0022\u005Cturl":{"-protocol:\u002F\u002Fhost:port":1}
,"key":{"finish":1}
,"finish":{"<<std":1}
,":cin.ignore":{"echoserver.close":1}
,":close":{"{stopped":1}
,"m_transport->":{"close":1}
,"synctrshared":{"(std":1}
,"(m_transport->":{"accept":1}
,"(synctrshared)":{"\u002F\u002Fclient":1}
,"\u002F\u002Fclient":{"connected":1}
,"servcie":{"started":1}
,"msg":{"client.read":1}
,"client.read":{"(msg)":1}
,"(msg)":{"client.write":1,"catch":1}
}
;Search.control.loadWordPairs(pairs);
